{
  /*
  useEffect(() => {
    axios
      .get("https://mocki.io/v1/8dbe05f4-149d-4bd1-a720-20d1bf3bc844")
      .then((response) => setData(response?.data))
      .catch((error) => console.log(error));
  }, []);
  console.log(data, "data");
*/
}

/*const filter = () => {
    //setData([]);
    setJobs([]);
  };*/

{
  /*const filteredJobs = jobsList.filter(
    (job) =>
      job.role.toLowerCase().includes(searchTerm.toLowerCase()) ||
      job.department.toLowerCase().includes(searchTerm.toLowerCase())
  );*/
}
{
  /*const filteredJobs = jobsList;
  console.log(filteredJobs);
  export default function JobList() {
    //const filteredJobs = onFilter(jobs, searchTerm, selectedDepartment);
    //const [data, setData] = useState(null);
    const [jobs, setJobs] = useState(jobsList);
  */
}

import { useState } from "react";
import { useEffect } from "react";
import axios from "axios";
import Job from "./Job";
const jobsList = [
  {
    id: 1,
    role: "Software Engineer",
    department: "SASS",
    startDate: "2020-01-01",
    endDate: "2021-12-31",
  },
  {
    id: 2,
    role: "backend Engineer",
    department: "SASS",
    startDate: "2020-01-01",
    endDate: "2021-12-31",
  },

  {
    id: 3,
    role: "Finance",
    department: "Finance",
    startDate: "2020-01-01",
    endDate: "2021-12-31",
  },
];

export default function JobList() {
  const [jobs, setJobs] = useState(jobsList);
  console.log(jobs);

  // fetching data from api
  const [data, setData] = useState(null);
  useEffect(() => {
    axios
      .get("https://mocki.io/v1/8dbe05f4-149d-4bd1-a720-20d1bf3bc844")
      .then((response) => setData(response?.data))
      .catch((error) => console.log(error));
  }, []);
  console.log(data, "data");

  // search input
  const [searchTerm, setSearchTerm] = useState("");
  // department selection
  // when user select an option from the dropdown, the selected value will be setted to deptOption
  // then according to selected value, the jobslist's department value is compared to the selected value
  const [deptOption, setDeptOption] = useState("");
  const selectHandler = (event) => {
    setDeptOption(event.target.value);
    if (event.target.value === "" || event.target.value === "all") {
      setJobs(jobsList);
    } else {
      let filteredBydepartment = jobsList.filter(function (job) {
        return job.department
          .toLocaleLowerCase()
          .includes(event.target.value.toLocaleLowerCase());
      });
      setJobs(filteredBydepartment);
    }
  };

  const inputHandler = (event) => {
    setSearchTerm(event.target.value);
    if (event.target.value === "") {
      setJobs(jobsList);
    } else {
      let filteredJobs = jobsList.filter((job) =>
        job.role
          .toLocaleLowerCase()
          .includes(event.target.value.toLocaleLowerCase())
      );
      setJobs(filteredJobs);
    }
  };

  return (
    <>
      <div className="flex flex-col space-y-4 w-full">
        <div className="flex items-center bg-white border border-yellow-500">
          <div className="w-1/3 border-r border-yellow-500">
            <select
              className="w-full bg-white border-none py-2 px-4 focus:ring-0 focus:border-none"
              name=""
              id=""
              value={deptOption}
              onChange={selectHandler}
            >
              <option value="all">All Departments</option>
              <option value="SASS">SASS</option>
              <option value="Finance">Finance</option>
              <option value="Networking">Networking</option>
              <option value="Accounting">Accounting</option>
            </select>
          </div>
          <div className="w-2/3   relative">
            <div className="absolute flex items-center  top-0 bottom-0">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                strokeWidth={1.5}
                stroke="currentColor"
                className="size-6"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  d="m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z"
                />
              </svg>
            </div>
            <input
              value={searchTerm}
              onChange={inputHandler}
              className=" w-full px-8"
              type="text"
              name=""
              placeholder="Search Job Here"
              id=""
            />
          </div>
        </div>
        <p className="text-center text-lg">Showing all Jobs</p>
        <div className="relative w-full overflow-x-auto">
          <table className="w-full table table-auto">
            <thead className="text-xl border-b border-gray-200">
              <tr className="">
                <th className="py-2 text-start px-3">Role</th>
                <th className="py-2 text-start px-3 ">Departement</th>
                <th className="py-2 text-start px-3 "> Date</th>
                <th className="py-2 text-start px-3 "></th>
              </tr>
            </thead>
            <tbody className="text-center text-lg ">
              {data?.map((item, index) => (
                <Job
                  key={index}
                  id={item?.id}
                  role={item?.name}
                  department={item?.department}
                  startDate={item?.startDate}
                  endDate={item?.endDate}
                />
              ))}
            </tbody>
          </table>
        </div>
      </div>
    </>
  );
}

